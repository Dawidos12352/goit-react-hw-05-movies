{"version":3,"file":"static/js/551.55690a61.chunk.js","mappings":"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","sources":["components/Input/Input.styled.js","components/Input/Input.jsx","components/SearchResults/SearchResults.styled.js","components/SearchResults/SearchResults.jsx","Pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Field = styled.input`\n  padding: 4px 4px;\n  width: 250px;\n  outline: none;\n  margin-right: 5px;\n  &:hover,\n  &:focus {\n    color: black;\n    border: 2px solid black;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 4px 4px;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: black;\n    border: 2px solid black;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Field, Button } from './Input.styled';\n\nconst Input = ({ inputValue, onSubmit }) => {\n  return (\n    <form>\n      <Field\n        type=\"text\"\n        name=\"query\"\n        value={inputValue}\n        onSubmit={event => onSubmit(event.target.value)}\n        placeholder=\"Search movies\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nInput.propTypes = {\n  inputValue: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default Input;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 35px;\n  list-style: none;\n  margin: 45px 0 0 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 5px;\n  font-size: 14px;\n  width: 160px;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const PlaceholderImage = styled.img`\n  width: 100px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Year = styled.p`\n  font-weight: 400;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 4px 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n\n  &:hover,\n  &:focus {\n   border: 1px solid black;\n  }\n`;\n\nexport const Error = styled.p`\n  font-weight: 500;\n  text-align: start;\n  position: absolute;\n  top: 120px;\n  left: 25px;\n`;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Image,\n  Item,\n  List,\n  Name,\n  Year,\n  Link,\n  Error,\n} from './SearchResults.styled';\nimport axios from 'axios';\nimport placeholder from 'images/placeholder.png';\nimport { PlaceholderImage } from './SearchResults.styled';\n\nconst SearchResults = ({ movieName }) => {\n  const [searchedMovie, setSearchedMovie] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n\n        const API_KEY = '0adfc883720d7cdfb3459be3bc3ae0bc';\n\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movieName}`\n        );\n        setSearchedMovie(response.data.results);\n      } catch (error) {\n        alert(\n          'Error! Something went wrong.'\n        );\n      }\n    };\n    if (movieName) {\n      getMovies();\n    }\n\n  }, [movieName]);\n\n  return (\n    <List>\n      {movieName && searchedMovie.length > 0 ? (\n        searchedMovie.map(movie => (\n          <Item key={movie.id}>\n            {movie.poster_path ? (\n              <Image\n                src={`https://www.themoviedb.org/t/p/w300${movie.poster_path}`}\n                alt={`${movie.original_title} poster`}\n              />\n            ) : (\n              <PlaceholderImage src={placeholder} />\n            )}\n            <Name>{movie.original_title}</Name>\n            <Year>({movie.release_date.substring(0, 4)})</Year>\n            <Link to={`/movies/${movie.id}`} state={{ from: '/movies' }}>\n              Details\n            </Link>\n          </Item>\n        ))\n      ) : (\n        <Error>{movieName ? `Erorr! No results found` : ''}</Error>\n      )}\n    </List>\n  );\n};\n\nSearchResults.propTypes = {\n  movieName: PropTypes.string.isRequired,\n};\n\nexport default SearchResults;","import { Main } from 'components/App.styled';\nimport Input from 'components/Input/Input';\nimport SearchResults from 'components/SearchResults/SearchResults';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Main>\n      <Input value={movieName} onSubmit={updateQuery} />\n      <SearchResults movieName={movieName} />\n    </Main>\n  );\n};\n\nexport default Movies;"],"names":["Field","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_ref","inputValue","onSubmit","_jsxs","children","_jsx","type","name","value","event","target","placeholder","List","Item","Image","_templateObject3","PlaceholderImage","_templateObject4","Name","_templateObject5","Year","_templateObject6","Link","NavLink","_templateObject7","Error","_templateObject8","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","movieName","_useState","useState","_useState2","_slicedToArray","searchedMovie","setSearchedMovie","useEffect","getMovies","_ref2","_asyncToGenerator","_callee","response","_context","axios","concat","data","results","t0","alert","apply","arguments","map","movie","poster_path","src","alt","original_title","release_date","substring","to","id","from","_Error","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","Main","Input","query","SearchResults"],"sourceRoot":""}